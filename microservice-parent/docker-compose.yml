version: '3.9'

services:

  product-service:
    image: product-service
    ports:
      - "8084:8084"
    build:
      context: ./product-service
      dockerfile: ./Dockerfile
    container_name: product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb
    networks:
      - spring

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin        # Admin user for MongoDB
      ME_CONFIG_MONGODB_ADMINPASSWORD: password     # Admin password for MongoDB
      ME_CONFIG_MONGODB_SERVER: mongodb             # MongoDB service name from docker-compose
      ME_CONFIG_MONGODB_DATABASE: product-service   # Set the target database (product-service)
    depends_on:
      - mongodb
    networks:
      - spring

volumes:
  mongo-db:
    driver: local

networks:
  spring:
    driver: bridge
